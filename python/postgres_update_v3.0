import sys, os

separator = '/' if not sys.platform == "win32" else '\\'

if len(sys.argv) > 1:
    DUMP_NAME = os.getcwd() + separator + sys.argv[1]
    print(DUMP_NAME)
else:
    DUMP_NAME = os.getcwd() + separator + "d2.sql"
POSTGRES_USER = "billing"
POSTGRES_PASSWORD = POSTGRES_USER
NAME_BASE = "billing10"
CONTAINER_NAME = "billing_postgres"
SUPERUSER = 'billing'
SUPERUSER_PASS = 'securePass1'
if sys.platform == "win32":
    OPERATION_BODY = f"docker exec -it {CONTAINER_NAME}"
else:
    OPERATION_BODY = f"sudo docker exec -it {CONTAINER_NAME}"
DB_OPERATION = OPERATION_BODY + " psql -U billing -c"


def remove_db():
    oper = f'''{OPERATION_BODY} psql -U {SUPERUSER} -d postgres -c  "DROP DATABASE {NAME_BASE}  WITH (FORCE)"'''
    os.system(oper)
    print('dropped')

def restore_db():
    oper = (
        f"""{OPERATION_BODY} psql -U {POSTGRES_USER} -d postgres -c  "create user {POSTGRES_USER} with encrypted password"""
        + f"'{POSTGRES_PASSWORD}'"
        + '"'
    )
    print('create user')
    os.system(oper)
    print(f"before create {NAME_BASE}")
    oper = f'''{OPERATION_BODY} psql -U {POSTGRES_USER} -d postgres -c  "CREATE DATABASE {NAME_BASE}"'''
    print('created')
    os.system(oper)


def upload_dump():
    print("begin upload dump")
    oper = (
        f"""{OPERATION_BODY} psql -U {POSTGRES_USER} -d postgres -c  "create user postgres with encrypted password"""
        + f"'{POSTGRES_PASSWORD}'"
        + '"'
    )
    os.system(oper)
    
    
    # com = f'docker exec -it billing_postgres pg_restore -U billing -d billing -1 /dumps/billing_stager.dump'
    com = f"""cat {DUMP_NAME} | docker exec -i {CONTAINER_NAME} psql -U billing -d {NAME_BASE}"""

    print(com)
    res = os.system(com)
    print(res)

def main():
    try:
        remove_db()
    except:
        pass
    restore_db()
    upload_dump()


if __name__ == "__main__":
    main()
